configfile: 'config/config.yaml'

include: 'rules/genotyping.smk'
include: 'rules/ont-alignment.smk'
include: 'rules/prepare-vcf.smk'
include: 'rules/bubble-tagging.smk'
include: 'rules/common-rules.smk'
include: 'rules/get-sample-list.smk'
include: 'rules/self-genotyping.smk'
include: 'rules/truvari-comparisons.smk'
include: 'rules/callset-comparisons.smk'

if config['pilot']:
    samples.sort()
    samples=samples[0:2]

wildcard_constraints:
    sample='|'.join(samples)

rule all:
    input:
        expand('/gpfs/project/projects/medbioinf/users/spani/results/1000GP/augmented_graph/{callset}/genotypes/multisample-multiallelic.vcf.gz', callset = [c for c in config['callsets'].keys()]),
        expand('/gpfs/project/projects/medbioinf/users/spani/results/1000GP/augmented_graph/{callset}/genotypes/multisample-biallelic.vcf.gz', callset = [c for c in config['callsets'].keys()]),
        expand('/gpfs/project/projects/medbioinf/users/spani/results/1000GP/augmented_graph/{callset}/plots/sv-counts-boxplot/plot-sv-counts-boxplot.tsv', callset = [c for c in config['callsets'].keys()]),
        expand('/gpfs/project/projects/medbioinf/users/spani/results/1000GP/augmented_graph/{callset}/plots/sv-length-boxplot/plot-sv-length-boxplot.tsv', callset = [c for c in config['callsets'].keys()]),
        expand('/gpfs/project/projects/medbioinf/users/spani/results/1000GP/augmented_graph/{callset}/plots/hwe-af/hwe.png', callset = [c for c in config['callsets'].keys()]),
        expand('/gpfs/project/projects/medbioinf/users/spani/results/1000GP/augmented_graph/{callset}/plots/qc/audano-curve.png', callset = [c for c in config['callsets'].keys()]),
        expand('/gpfs/project/projects/medbioinf/users/spani/results/1000GP/augmented_graph/{callset}/callset-comparison/out-graph/{sample}-intersection.tsv', callset = [c for c in config['callsets'].keys()], sample=config['hgsvc_samples']),
        expand('/gpfs/project/projects/medbioinf/users/spani/results/1000GP/augmented_graph/{callset}/callset-comparison/in-graph/HG01258-intersection.tsv', callset = [c for c in config['callsets'].keys()]),
        expand('/gpfs/project/projects/medbioinf/users/spani/results/1000GP/augmented_graph/{callset}/self-genotyping/concordance-{representation}/summary_{min_af}-{max_af}.tsv', 
                    callset = [c for c in config['callsets'].keys()], 
                    representation=['biallelic', 'multiallelic'], 
                    min_af=['0', '0.05', '0.1', '0.2'], 
                    max_af=['1']
                )
        