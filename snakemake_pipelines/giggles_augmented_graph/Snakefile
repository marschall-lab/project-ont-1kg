configfile: 'config/config.yaml'

include: 'rules/genotyping.smk'
include: 'rules/ont-alignment.smk'
include: 'rules/prepare-vcf.smk'
include: 'rules/bubble-tagging.smk'
include: 'rules/common-rules.smk'
include: 'rules/get-sample-list.smk'

if config['pilot']:
    samples.sort()
    samples=samples[0:100]

wildcard_constraints:
    sample='|'.join(samples)

rule all:
    input:
        expand('/gpfs/project/projects/medbioinf/users/spani/results/1000GP/giggles_augmented_graph/{callset}/vcf/{callset}_filtered.vcf.gz', callset = [c for c in config['callsets'].keys()]),
        expand('/gpfs/project/projects/medbioinf/users/spani/results/1000GP/giggles_augmented_graph/{callset}/vcf/{callset}-giggles_filtered.vcf.gz', callset = [c for c in config['callsets'].keys()]),
        expand('/gpfs/project/projects/medbioinf/users/spani/results/1000GP/giggles_augmented_graph/{callset}/vcf/{callset}.vcf.gz', callset = [c for c in config['callsets'].keys()]),
        expand('/gpfs/project/projects/medbioinf/users/spani/results/1000GP/giggles_augmented_graph/{callset}/vcf/{callset}-giggles.vcf.gz', callset = [c for c in config['callsets'].keys()])